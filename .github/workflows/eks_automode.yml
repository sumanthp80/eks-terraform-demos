name: EKS AutoMode Terraform Deployment
on:
  push:
    branches:
      - main
    paths:
      - 'automode/**'
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - 'automode/**'
  workflow_dispatch:
    inputs:
      action:
        description: "Specify the Terraform action: apply or destroy"
        required: true
        default: "apply"

# env:
#   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#   AWS_DEFAULT_REGION: us-east-1
env:
  AWS_REGION : "us-east-1" #Change to reflect your Region

# Permission can be added at job level or workflow level    
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read    # This is required for actions/checkout

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: automode
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        role-to-assume: arn:aws:iam::553999167352:role/githuboidcrole #change to reflect your IAM roleâ€™s ARN
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ env.AWS_REGION }}
      # Hello from AWS: WhoAmI
    - name: Sts GetCallerIdentity
      run: |
        # aws s3 ls
        aws sts get-caller-identity
          
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: true

    - name: Initialize Terraform
      run: terraform init

    - name: Validate Terraform
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan

    - name: Execute Terraform Action
      run: |
        if [ "${{ github.event.inputs.action }}" == "destroy" ]; then
          terraform destroy -auto-approve
        else
          terraform apply -auto-approve
        fi
